@inject IJSRuntime Js

<canvas class="kanvaso" height="@Height" width="400" @ref="CanvasReference"></canvas>

@code {

    [Parameter, EditorRequired]
    public int Height { get; set; }

    [Parameter, EditorRequired]
    public string Text { get; set; } = null!;

    private ElementReference CanvasReference { get; set; }
    private IJSObjectReference? _module;

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            _module = await Js.InvokeAsync<IJSObjectReference>("import", "./Okena.js");
            await _module.InvokeVoidAsync("drawText", Normalize(Text), CanvasReference, Height);
        }
    }

    private string Normalize(string text) => text.Replace("ei", "E").Replace("ai", "A").Replace("ou", "O").Replace("ui", "U");

}